class Solution {
public:
    int findNthDigit(int n) {
        //2147483647
        if(n<10){return n;}
        if(n<190)//90+9->90*2+9=189
        {
            if(n%2==0)//十位数
            {
                return (n+10)/20;
            }
            return (n+10)/2%10;
        }
        if(n<2890)//189+(900*3)=2889
        {
            n-=189;
            if((n)%3==1)//百位数
            {
                return (n/3+99)/100;
            }
            if((n)%3==2)//十位数
            {
                return (n/3+99)/10%10;
            }
            return (n/3+99)%10;
        }
        if(n<38890)//2889+(9000*4)=38889
        {
            n-=2889;
            if((n)%4==1)//千位数
            {
                return (n/4+999)/1000;
            }
            if((n)%4==2)//百位数
            {
                return (n/4+999)/100%10;
            }
            if((n)%4==3)//十位数
            {
                return (n/4+999)/10%10;
            }            
            return (n/4+999)%10;
        }
        if(n<488890)//38889+(90000*5)=488889
        {
            n-=38889;
            if((n)%5==1)//万位数
            {
                return (n/5+9999)/10000;
            }
            if((n)%5==2)//千位数
            {
                return (n/5+9999)/1000%10;
            }
            if((n)%5==3)//百位数
            {
                return (n/5+9999)/100%10;
            }
            if((n)%5==4)//十位数
            {
                return (n/5+9999)/10%10;
            }            
            return (n/5+9999)%10;
        }
        if(n<=5888889)//488889+(900000*6)=5888889
        {
            n-=488889;
            if((n)%6==1)//no.1位数
            {
                return (n/6+99999)/100000;
            }
            if((n)%6==2)//位数
            {
                return (n/6+99999)/10000%10;
            }
            if((n)%6==3)//位数
            {
                return (n/6+99999)/1000%10;
            }
            if((n)%6==4)//位数
            {
                return (n/6+99999)/100%10;
            }   
            if((n)%6==5)//位数
            {
                return (n/6+99999)/10%10;
            }               
            return (n/6+99999)%10;
        }
        if(n<=68888889)//5888889+(9000000*7)=68888889
        {
            n-=5888889;
            if((n)%7==1)//no.1位数
            {
                return (n/7+999999)/1000000;//(n/7+9999999)/1000000;
            }
            if((n)%7==2)//位数
            {
                return (n/7+999999)/100000%10;
            }
            if((n)%7==3)//位数
            {
                return (n/7+999999)/10000%10;
            }
            if((n)%7==4)//位数
            {
                return (n/7+999999)/1000%10;
            }   
            if((n)%7==5)//位数
            {
                return (n/7+999999)/100%10;
            }
            if((n)%7==6)//位数
            {
                return (n/7+999999)/10%10;
            }
            return (n/7+999999)%10;
        } 
        if(n<=788888889)//68888889+(90000000*8)=788888889
        {
            n-=68888889;
            if((n)%8==1)//no.1位数
            {
                return (n/8+9999999)/10000000;//(n/7+9999999)/1000000;
            }
            if((n)%8==2)//位数
            {
                return (n/8+9999999)/1000000%10;
            }
            if((n)%8==3)//位数
            {
                return (n/8+9999999)/100000%10;
            }
            if((n)%8==4)//位数
            {
                return (n/8+9999999)/10000%10;
            }   
            if((n)%8==5)//位数
            {
                return (n/8+9999999)/1000%10;
            }
            if((n)%8==6)//位数
            {
                return (n/8+9999999)/100%10;
            }
            if((n)%8==7)//位数
            {
                return (n/8+9999999)/10%10;
            }
            return (n/8+9999999)%10;
        }  
        //if(n<=8888888889)//我猜就是8888888889,试试:788888889+(900000000*9)=8888888889 找到规律咯！
        //{
            n-=788888889;
            if((n)%9==1)//no.1位数
            {
                return (n/9+99999999)/100000000;//(n/7+9999999)/1000000;
            }
            if((n)%9==2)//位数
            {
                return (n/9+99999999)/10000000%10;
            }
            if((n)%9==3)//位数
            {
                return (n/9+99999999)/1000000%10;
            }
            if((n)%9==4)//位数
            {
                return (n/9+99999999)/100000%10;
            }   
            if((n)%9==5)//位数
            {
                return (n/9+99999999)/10000%10;
            }
            if((n)%9==6)//位数
            {
                return (n/9+99999999)/1000%10;
            }
            if((n)%9==7)//位数
            {
                return (n/9+99999999)/100%10;
            }
            if((n)%9==8)//位数
            {
                return (n/9+99999999)/10%10;
            }
            return (n/9+99999999)%10;
        //}         
    }
};