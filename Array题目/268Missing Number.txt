class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int Len=nums.size();
		unsigned long int Sum;
		//int Up =Len-1;
		Sum=Len*(Len+1)/2;
		for (int i=0;i<Len;i++)
		{
		    Sum-=nums[i];
		}
		return Sum;
		//上面的 方法2： 击败40+%~还行~
		
		/* //方法1：  也就击败百分之二十几
		int Down=0;
		int Mid;
		
		sort(nums.begin(),nums.end());
		//return nums[4];
		if(nums[Up]==Up){return nums[Up]+1;}//不加这里会漏掉最后一个数缺失的情况
		if(nums[0]==1){return 0;}
		while(Up-Down>1){
			Mid=(Up+Down)/2;
			if(nums[Mid]==Mid){Down=Mid+1;}
			else{ Up=Mid; }
		}
		//return nums[Down];//try
		if(nums[Down]==Down)//下一步改这里……
		{return (nums[Up]-1);}
		else
		{return (nums[Down]-1);}
		*/
    }
};