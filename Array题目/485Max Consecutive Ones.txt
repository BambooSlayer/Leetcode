class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        
        int sum=0,max=0,Len,Len_half;
        Len=nums .size();Len_half=Len*0.5;
        vector<int> zeros(1,-1);//开头-1
        for(int i=0;i<Len;i++){if(nums[i]==0){zeros.push_back(i);}}//测试return zeros[2];
        zeros.push_back(Len);//结尾
        int zeronum;
        zeronum=zeros.size();
        max=zeros[1]-zeros[0]-1;//我第一次居然把这里打错成nums了，太粗心了！
        for(int i=2;i<zeronum;i++)
        {
            sum=(zeros[i]-zeros[i-1]-1);
            if(sum>max){max=sum;}
            if(max>=Len_half){return max;}
        }
        return max;
        /*  //这个方法打倒47%
        for(int i;i<Len;i++)
        {
            if(nums[i]==0)
            {
                if(sum>=Len_half){return sum;}
                if(sum>max)
                {
                    max=sum;sum=0;
                    if((Len-i)<max){return max;}
                }
                else{sum=0;}
            }
            else
            {
                sum+=nums[i];
            }
            
        }
        if(sum>max){return sum;}
        return max;*/
    }
};