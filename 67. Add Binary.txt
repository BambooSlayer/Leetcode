class Solution {
public:
    string addBinary(string a, string b) {
        int l1,l2,la,lb,Min,Max,flag=0,i;
        string S,L;
        l1=a.length();
        l2=b.length();
        if(l1>l2)
        {
            Min=l2;
            Max=l1;
            S=b;
            L=a;
        }
        else
        {
            Min=l1;
            Max=l2;
            S=a;
            L=b;
        } 
        for(i=0;i<Min;i++)
        {
            if(flag==0)
            {
                if(S.compare(Min-i-1,1,L,Max-i-1,1)==0)
                {
                    if(S.compare(Min-i-1,1,"1")==0)
                    {
                        //NO!:L[Max-i-1]="0";
                        L.replace(Max-i-1,1,"0");
                        //string &replace(int p0, int n0,const char *s);
                        //删除从p0开始的n0个字符，然后在p0处插入串s
                        //string &assign(const string &s,int start,int n);
                        //把字符串s中从start开始的n个字符赋给当前字符串
                        flag=1;
                    }
                }
                else
                {
                    //L[Max-i-1]="1";
                    L.replace(Max-i-1,1,"1");
                }
            }
            else
            {
                if(S.compare(Min-i-1,1,L,Max-i-1,1)==0)
                {
                    
                    if(S.compare(Min-i-1,1,"1")==0)
                    {
                        //flag=1;
                    }
                    else
                    {
                        L.replace(Max-i-1,1,"1");//L[Max-i-1]="1";
                        flag=0;
                    }
                }
                else
                {
                    L.replace(Max-i-1,1,"0");//L[Max-i-1]="0";
                    flag=1;
                }
            }
        }
        while(flag==1 && i<Max )
        {
            if(L.compare(Max-i-1,1,"1")==0)
            {
                L.replace(Max-i-1,1,"0");
            }
            else
            {
                L.replace(Max-i-1,1,"1");
                flag=0;
            }
            i++;
        }
        if(flag==1)
        {S="1";
        S+=L;
            return S;
        }
            return L;
    }
};