/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root==NULL)return 0;
        //if(root->left==NULL || root->right==NULL)
        //{
        //    return 1;
        //}//根节点不能算是叶节点！要是没有子节点的才算
        if(root->left==NULL)
        {
            return minDepth(root->right,1);
        }
        else if(root->right==NULL)
        {
            return minDepth(root->left,1);
        }
        else
        {
            int l=minDepth(root->left,1);
            int r=minDepth(root->right,1);
            return (l>r)?r:l; 
        }
    }
    int minDepth(TreeNode* root,int i) {
        if(root==NULL)return i;
        if(root->left==NULL && root->right==NULL)//要是没有子节点的才能算叶节点
        {
            return i+1;
        }
        if(root->left==NULL)
        {
            return minDepth(root->right,i+1);
        }
        else if(root->right==NULL)
        {
            return minDepth(root->left,i+1);
        }
        else
        {
            int l=minDepth(root->left,i+1);
            int r=minDepth(root->right,i+1);
            return (l>r)?r:l;
        }
    }
};